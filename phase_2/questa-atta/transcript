vsim work.processor -voptargs=+acc
# vsim work.processor -voptargs="+acc" 
# Start time: 05:51:47 on Dec 30,2022
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
add wave -position insertpoint  \
sim:/processor/ALU_ex \
sim:/processor/alu_op_dec \
sim:/processor/ALU_out_to_wb \
sim:/processor/alu_src_dec \
sim:/processor/alu_value_mem \
sim:/processor/branch_result \
sim:/processor/carry_sel_dec \
sim:/processor/clear_instruction_dec \
sim:/processor/clk \
sim:/processor/conditions_from_memory_pop \
sim:/processor/flag_reg_enable_dec \
sim:/processor/flag_reg_select \
sim:/processor/flag_reg_select_dec \
sim:/processor/flag_register_ex \
sim:/processor/flush_decode \
sim:/processor/flush_fetch \
sim:/processor/inport_sel_dec \
sim:/processor/inport_sel_ex \
sim:/processor/inport_sel_mem \
sim:/processor/input_port \
sim:/processor/input_port_ex \
sim:/processor/input_port_mem \
sim:/processor/instruction \
sim:/processor/interrupt_signal \
sim:/processor/jump_selector_dec \
sim:/processor/LDM_value_dec \
sim:/processor/LDM_value_ex \
sim:/processor/LDM_value_fet \
sim:/processor/ldm_value_mem \
sim:/processor/mem_data \
sim:/processor/mem_pop_dec \
sim:/processor/mem_pop_ex \
sim:/processor/mem_push_dec \
sim:/processor/mem_push_ex \
sim:/processor/mem_read_dec \
sim:/processor/mem_read_ex \
sim:/processor/mem_write_dec \
sim:/processor/mem_write_ex \
sim:/processor/memory_address_select_dec \
sim:/processor/memory_address_select_ex \
sim:/processor/memory_write_src_select_dec \
sim:/processor/memory_write_src_select_ex \
sim:/processor/new_PC_ex \
sim:/processor/out_port \
sim:/processor/outport_enable_dec \
sim:/processor/outport_enable_ex \
sim:/processor/outport_enable_mem \
sim:/processor/pc_choose_memory_dec \
sim:/processor/pc_choose_memory_ex \
sim:/processor/PC_ex \
sim:/processor/pc_plus_one_dec \
sim:/processor/pc_plus_one_ex \
sim:/processor/pc_plus_one_fetch_s \
sim:/processor/pc_plus_one_r \
sim:/processor/pc_write \
sim:/processor/pc_write_back_value \
sim:/processor/r_dst_dec \
sim:/processor/r_dst_ex \
sim:/processor/r_dst_fetch \
sim:/processor/r_dst_mem \
sim:/processor/r_scr_dec \
sim:/processor/r_scr_ex \
sim:/processor/r_scr_fetch \
sim:/processor/r_scr_mem \
sim:/processor/read_data1_ex \
sim:/processor/read_data2_ex \
sim:/processor/reg_data1_from_dec \
sim:/processor/reg_data1_mem \
sim:/processor/reg_data2_from_dec \
sim:/processor/reg_data2_mem \
sim:/processor/reg_write_address_dec \
sim:/processor/reg_write_address_ex \
sim:/processor/reg_write_address_mem \
sim:/processor/reg_write_dec \
sim:/processor/reg_write_ex \
sim:/processor/reg_write_mem \
sim:/processor/rst \
sim:/processor/shamt \
sim:/processor/shamt_dec \
sim:/processor/shamt_ex \
sim:/processor/shift_reg \
sim:/processor/stall_fetch \
sim:/processor/wb_sel_dec \
sim:/processor/wb_sel_ex \
sim:/processor/wb_sel_mem \
sim:/processor/write_address_from_decode \
sim:/processor/write_address_from_wb \
sim:/processor/write_address_to_mem \
sim:/processor/write_back_data
do processor.do
add wave -position 1  sim:/processor/decode_stage_dut/control_unit/current_state
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
# End time: 05:59:33 on Dec 30,2022, Elapsed time: 0:07:46
# Errors: 0, Warnings: 1
