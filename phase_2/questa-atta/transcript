vsim work.processor -voptargs=+acc
# vsim work.processor -voptargs="+acc" 
# Start time: 15:17:01 on Dec 30,2022
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
add wave -position insertpoint  \
sim:/processor/ALU_ex \
sim:/processor/alu_op_dec \
sim:/processor/ALU_out_to_wb \
sim:/processor/alu_src_dec \
sim:/processor/alu_value_mem \
sim:/processor/branch_result \
sim:/processor/carry_sel_dec \
sim:/processor/clear_instruction_dec \
sim:/processor/clk \
sim:/processor/conditions_from_memory_pop \
sim:/processor/flag_reg_enable_dec \
sim:/processor/flag_reg_select \
sim:/processor/flag_reg_select_dec \
sim:/processor/flag_register_ex \
sim:/processor/flush_decode \
sim:/processor/flush_fetch \
sim:/processor/inport_sel_dec \
sim:/processor/inport_sel_ex \
sim:/processor/inport_sel_mem \
sim:/processor/input_port \
sim:/processor/input_port_ex \
sim:/processor/input_port_mem \
sim:/processor/instruction \
sim:/processor/interrupt_signal \
sim:/processor/jump_selector_dec \
sim:/processor/LDM_value_dec \
sim:/processor/LDM_value_ex \
sim:/processor/LDM_value_fet \
sim:/processor/ldm_value_mem \
sim:/processor/mem_data \
sim:/processor/mem_pop_dec \
sim:/processor/mem_pop_ex \
sim:/processor/mem_push_dec \
sim:/processor/mem_push_ex \
sim:/processor/mem_read_dec \
sim:/processor/mem_read_ex \
sim:/processor/mem_write_dec \
sim:/processor/mem_write_ex \
sim:/processor/memory_address_select_dec \
sim:/processor/memory_address_select_ex \
sim:/processor/memory_write_src_select_dec \
sim:/processor/memory_write_src_select_ex \
sim:/processor/new_PC_ex \
sim:/processor/out_port \
sim:/processor/outport_enable_dec \
sim:/processor/outport_enable_ex \
sim:/processor/outport_enable_mem \
sim:/processor/pc_choose_memory_dec \
sim:/processor/pc_choose_memory_ex \
sim:/processor/PC_ex \
sim:/processor/pc_plus_one_dec \
sim:/processor/pc_plus_one_ex \
sim:/processor/pc_plus_one_fetch_s \
sim:/processor/pc_plus_one_r \
sim:/processor/pc_write \
sim:/processor/pc_write_back_value \
sim:/processor/r_dst_dec \
sim:/processor/r_dst_ex \
sim:/processor/r_dst_fetch \
sim:/processor/r_dst_mem \
sim:/processor/r_scr_dec \
sim:/processor/r_scr_ex \
sim:/processor/r_scr_fetch \
sim:/processor/r_scr_mem \
sim:/processor/read_data1_ex \
sim:/processor/read_data2_ex \
sim:/processor/reg_data1_from_dec \
sim:/processor/reg_data1_mem \
sim:/processor/reg_data2_from_dec \
sim:/processor/reg_data2_mem \
sim:/processor/reg_write_address_dec \
sim:/processor/reg_write_address_ex \
sim:/processor/reg_write_address_mem \
sim:/processor/reg_write_dec \
sim:/processor/reg_write_ex \
sim:/processor/reg_write_mem \
sim:/processor/rst \
sim:/processor/shamt \
sim:/processor/shamt_dec \
sim:/processor/shamt_ex \
sim:/processor/shift_reg \
sim:/processor/stall_fetch \
sim:/processor/wb_sel_dec \
sim:/processor/wb_sel_ex \
sim:/processor/wb_sel_mem \
sim:/processor/write_address_from_decode \
sim:/processor/write_address_from_wb \
sim:/processor/write_address_to_mem \
sim:/processor/write_back_data
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
add wave -position insertpoint  \
sim:/processor/memory_stage_dut/alu_value \
sim:/processor/memory_stage_dut/alu_value_out \
sim:/processor/memory_stage_dut/clk \
sim:/processor/memory_stage_dut/data \
sim:/processor/memory_stage_dut/data_r \
sim:/processor/memory_stage_dut/final_pc \
sim:/processor/memory_stage_dut/flags \
sim:/processor/memory_stage_dut/input_port \
sim:/processor/memory_stage_dut/input_port_out \
sim:/processor/memory_stage_dut/interrupt \
sim:/processor/memory_stage_dut/ldd_address \
sim:/processor/memory_stage_dut/LDM_value \
sim:/processor/memory_stage_dut/LDM_value_out \
sim:/processor/memory_stage_dut/mem_inPortSelect \
sim:/processor/memory_stage_dut/mem_inPortSelect_buff \
sim:/processor/memory_stage_dut/memory_address_select \
sim:/processor/memory_stage_dut/memory_pop \
sim:/processor/memory_stage_dut/memory_push \
sim:/processor/memory_stage_dut/memory_read \
sim:/processor/memory_stage_dut/memory_write \
sim:/processor/memory_stage_dut/memory_write_src_select \
sim:/processor/memory_stage_dut/outport_enable \
sim:/processor/memory_stage_dut/outport_enable_out \
sim:/processor/memory_stage_dut/pc \
sim:/processor/memory_stage_dut/pc_choose_memory \
sim:/processor/memory_stage_dut/pc_from_mux_ex \
sim:/processor/memory_stage_dut/r_dst \
sim:/processor/memory_stage_dut/r_dst_buff \
sim:/processor/memory_stage_dut/read_data1_mem \
sim:/processor/memory_stage_dut/read_data2_mem \
sim:/processor/memory_stage_dut/reg_write \
sim:/processor/memory_stage_dut/reg_write_address \
sim:/processor/memory_stage_dut/reg_write_address_out \
sim:/processor/memory_stage_dut/reg_write_out \
sim:/processor/memory_stage_dut/reset \
sim:/processor/memory_stage_dut/shift_reg \
sim:/processor/memory_stage_dut/std_address \
sim:/processor/memory_stage_dut/wb_sel \
sim:/processor/memory_stage_dut/wb_sel_out
do processor.do
run
run
run
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "sm(fast)".
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
add wave -position 0  sim:/processor/decode_stage_dut/control_unit/current_state
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run 500
run 500

run 500
run 500
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
add wave -position 1  sim:/processor/fetch_stage_dut/mem_fetch_dut/pc
add wave -position 1  sim:/processor/fetch_stage_dut/mem_fetch_dut/pc_plus_one
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
add wave -position 3  sim:/processor/execute_stage_dut/alu_dut/Op1
add wave -position 4  sim:/processor/execute_stage_dut/alu_dut/Op2
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "sm(fast)".
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "sm(fast)".
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
add wave -position 2  sim:/processor/pc_choose_memory_dec
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
add wave -position 4  sim:/processor/jump_selector_dec
add wave -position 3  sim:/processor/pc_write_back_value
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
add wave -position 2  sim:/processor/memory_stage_dut/data
add wave -position 3  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/final_pc
add wave -position 3  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/data_memory
add wave -position 3  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/data
add wave -position 2  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/temp_shift_reg
add wave -position 2  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/shift_reg
add wave -position 2  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/sp
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
add wave -position 3  sim:/processor/mem_pop_dec
add wave -position 3  sim:/processor/decode_stage_dut/control_unit/counter
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
# Causality operation skipped due to absence of debug database file
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "sm(fast)".
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "sm(fast)".
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
run
run
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
add wave -position 32  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/write_data
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
add wave -position 7  sim:/processor/memory_stage_dut/memory_read
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Note: (vopt-143) Recognized 1 FSM in module "sm(fast)".
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
add wave -position 6  sim:/processor/mem_pop_ex
add wave -position 6  sim:/processor/memory_stage_dut/memory_address_select
add wave -position 7  sim:/processor/memory_stage_dut/memory_write
add wave -position 5  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/write_data
add wave -position 8  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/memory_push
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
add wave -position 1  sim:/processor/decode_stage_dut/reg_file_dut/reg_file
run
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run 600
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
do processor.do
run 600
run
run
run
add wave -position 10  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/data
add wave -position 11  sim:/processor/memory_stage_dut/memory_stage_without_buffers_dut/final_address
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run 600
run
run
run
add wave -position 11  sim:/processor/memory_address_select_ex
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
run
run
run
run
run
run
run
run
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
mem save -o DATA.mem -f mti -data symbolic -addr hex -wordsperline 1 /processor/memory_stage_dut/memory_stage_without_buffers_dut/data_memory
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Compile of decode_stage.sv was successful.
# Compile of reg_file.v was successful.
# Compile of sign_extend.v was successful.
# Compile of sm.sv was successful.
# Compile of alu.sv was successful.
# Compile of branch_controller.sv was successful.
# Compile of execute_stage.sv was successful.
# Compile of forwarding_unit.sv was successful.
# Compile of fetch_stage.sv was successful.
# Compile of mem_fetch.sv was successful.
# Compile of memory_stage.sv was successful.
# Compile of memory_stage_without_buffers.sv was successful.
# Compile of write_back_stage.v was successful.
# Compile of hazard_controller.sv was successful.
# Compile of processor.sv was successful.
# Compile of var_reg.v was successful.
# Compile of var_reg_with_enable.v was successful.
# Compile of var_reg_with_mux.v was successful.
# 18 compiles, 0 failed with no errors.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.processor(fast)
# Loading work.fetch_stage(fast)
# Loading work.var_reg_with_enable(fast)
# Loading work.var_reg(fast)
# Loading work.mem_fetch(fast)
# Loading work.decode_stage(fast)
# Loading work.var_reg_with_mux(fast)
# Loading work.var_reg(fast__1)
# Loading work.var_reg_with_mux(fast__1)
# Loading work.var_reg_with_mux(fast__2)
# Loading work.var_reg_with_mux(fast__3)
# Loading work.sm(fast)
# Loading work.reg_file(fast)
# Loading work.execute_stage(fast)
# Loading work.forwarding_unit(fast)
# Loading work.branch_controller(fast)
# Loading work.var_reg(fast__2)
# Loading work.var_reg_with_enable(fast__1)
# Loading work.var_reg(fast__3)
# Loading work.var_reg(fast__4)
# Loading work.var_reg(fast__5)
# Loading work.var_reg(fast__6)
# Loading work.var_reg(fast__7)
# Loading work.alu(fast)
# Loading work.memory_stage(fast)
# Loading work.memory_stage_without_buffers(fast)
# Loading work.write_back_stage(fast)
# Loading work.hazard_controller(fast)
do processor.do
run
run
run
run
run
run
run
run
run
run
# End time: 23:04:42 on Dec 30,2022, Elapsed time: 7:47:41
# Errors: 0, Warnings: 1
